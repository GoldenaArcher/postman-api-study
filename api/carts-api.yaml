openapi: 3.1.0

info:
  title: Carts API
  version: 1.0.0
  description: API for managing shopping carts in the store.

tags:
  - name: carts
    description: Cart related endpoints

paths:
  /carts:
    post:
      tags: [carts]
      description: |
        To create a new cart, submit an empty POST request to the `/carts` endpoint.
      responses:
        "201":
          description: Indicates that the cart has been created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartCreatedResponse"
              examples:
                CartCreated:
                  $ref: "#/components/examples/CartCreated"
          links:
            GetCartById:
              $ref: "#/components/links/GetCartById"

  /carts/{cartId}:
    get:
      tags: [carts]
      summary: Returns a cart.
      parameters:
        - $ref: "#/components/parameters/cartIdPathParam"
      operationId: getCartById
      responses:
        "200":
          description: Indicates a successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCartByIdResponse"
              examples:
                EmptyCart:
                  $ref: "#/components/examples/EmptyCart"
        "404":
          description: Indicates that there is no cart with the specified id.

  /carts/{cartId}/items:
    get:
      tags: [carts]
      summary: Returns the items in a cart.
      parameters:
        - $ref: "#/components/parameters/cartIdPathParam"
      responses:
        "200":
          description: Indicates a successful response.
          content:
            application/json:
              schema:
                $ref: "./products-api.yaml#/components/schemas/ProductArray"
              examples:
                EmptyCartList:
                  $ref: "./products-api.yaml#/components/examples/ProductListEmpty"
                ManyCartItems:
                  $ref: "./products-api.yaml#/components/examples/ProductListMany"
        "404":
          description: Indicates that there is no cart with the specified id.
    post:
      tags: [carts]
      summary: Allows the addition of items to an existing cart. Only one item can be added at a time.
      parameters:
        - $ref: "#/components/parameters/cartIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
            examples:
              AddCartItemRequest:
                $ref: "#/components/examples/AddCartItemRequestExample"
      responses:
        "201":
          description: Indicates that the item has been added successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddCartItemResponse"
              examples:
                AddCartItemResponseExample:
                  $ref: "#/components/examples/AddCartItemResponseExample"
        "400":
          description: Indicates that the parameters provided are invalid.

  /carts/{cartId}/items/{itemId}:
    patch:
      tags: [carts]
      summary: Allows modifying information about an item in the cart.
      parameters:
        - $ref: "#/components/parameters/cartIdPathParam"
        - $ref: "#/components/parameters/itemIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: |
                    The quantity of the product in the cart.
              required:
                - quantity
            examples:
              UpdateCartItemRequestExample:
                value:
                  quantity: 3
      responses:
        "204":
          description: Indicates that the item has been updated successfully.
        "400":
          description: Indicates that the parameters provided are invalid or missing.
        "404":
          description: Indicates that the specified cart or item was not found.

    put:
      tags: [carts]
      summary: Replace an item in the cart with a new product and quantity.
      parameters:
        - $ref: "#/components/parameters/cartIdPathParam"
        - $ref: "#/components/parameters/itemIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
            examples:
              AddCartItemRequest:
                $ref: "#/components/examples/AddCartItemRequestExample"
      responses:
        "204":
          description: Indicates that the item has been replaced successfully.
        "400":
          description: Indicates that the parameters provided are invalid or missing.
        "404":
          description: Indicates that the specified cart or item was not found.

    delete:
      tags: [carts]
      summary: Remove an item from the cart.
      parameters:
        - $ref: "#/components/parameters/cartIdPathParam"
        - $ref: "#/components/parameters/itemIdPathParam"
      responses:
        "204":
          description: Indicates that the item has been removed successfully.
        "404":
          description: Indicates that the specified cart or item was not found.

components:
  x-snippet:
    cartIdExample: &cartIdExample ZFe4yhG5qNhmuNyrbLWa4
    itemIdExample: &itemIdExample 12345

  parameters:
    cartIdPathParam:
      name: cartId
      in: path
      required: true
      description: The unique identifier for the cart.
      schema:
        $ref: "#/components/schemas/CartId"
      example: *cartIdExample
    itemIdPathParam:
      name: itemId
      in: path
      required: true
      description: The unique identifier for the item in the cart.
      schema:
        $ref: "#/components/schemas/CartItemId"
      example: *itemIdExample

  examples:
    CartCreated:
      summary: Example of a cart creation response
      value:
        cartId: "bx0-ycNjqIm5IvufuuZ09"
        created: true
    EmptyCart:
      summary: Example of an empty cart response
      value:
        created: "2025-09-07T14:48:00.000Z"
        items: []
    AddCartItemRequestExample:
      summary: Example of a request to add an item to a cart
      value:
        productId: 4643
    AddCartItemResponseExample:
      summary: Example of a response after adding an item to a cart
      value:
        created: true
        itemId: *itemIdExample
    UpdateCartItemRequestExample:
      summary: Example of a request to update an item in a cart
      value:
        quantity: 3
        productId: 4643

  schemas:
    CartId:
      type: string
      description: The unique identifier for a cart.
      example: *cartIdExample
    CartCreatedResponse:
      type: object
      properties:
        cartId:
          $ref: "#/components/schemas/CartId"
        created:
          type: boolean
          description: Indicates whether the cart was created successfully.
    GetCartByIdResponse:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: The timestamp when the cart was created.
          example: "2025-09-07T14:48:00.000Z"
        items:
          $ref: "./products-api.yaml#/components/schemas/ProductArray"
    AddCartItemResponse:
      type: object
      properties:
        created:
          type: boolean
        itemId:
          $ref: "#/components/schemas/CartItemId"

    CartItem:
      type: object
      properties:
        productId:
          $ref: "./products-api.yaml#/components/schemas/ProductId"
        quantity:
          type: integer
          description: |
            The quantity of the product in the cart.

            If no quantity is provided, the default value is 1.
          example: 2
      required:
        - productId

    CartItemId:
      type: number
      description: The unique identifier for a cart item.
      example: *itemIdExample

  links:
    GetCartById:
      operationId: getCartById
      parameters:
        cartId: "$response.body#/cartId"
      description: |
        Link to retrieve the cart by its ID.
